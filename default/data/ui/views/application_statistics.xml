<form>
  <label>application statistics</label>
  <fieldset autoRun="true" submitButton="false">
    <input type="time" searchWhenChanged="true">
    </input>
  </fieldset>
  <row>
    <panel>
      <chart>
        <title>average/median/95th percentile response time/connect</title>
        <searchString>index=heroku    | regex method="GET|POST|PUT|DELETE"    | eval connect_time=tonumber(replace(connect, "[ms]", "")) / 1000   | eval response_time=tonumber(replace(service, "[ms]", "")) / 1000   | timechart span="1m" avg(response_time) as "response avg"                       , median(response_time) as "response median"                       , perc95(response_time) as "response 95%"                       , avg(connect_time) as "connect avg"</searchString>
        <earliestTime/>
        <latestTime/>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">false</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.axisTitleY.text">ms</option>
        <option name="charting.axisTitleX.text">time</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>requests / timeouts</title>
        <searchString>index=heroku    | regex method="GET|POST|PUT|DELETE"    | timechart span="1m" count as "# requests"                       , count(eval(match(status, "503"))) as "# timeouts"</searchString>
        <earliestTime/>
        <latestTime/>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">false</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">right</option>
      </chart>
    </panel>
    <panel>
      <table>
        <title>response times / requests / timeouts</title>
        <searchString>index=heroku 
  | regex method="GET|POST|PUT|DELETE" 
  | eval connect_time=tonumber(replace(connect, "[ms]", "")) / 1000
  | eval response_time=tonumber(replace(service, "[ms]", "")) / 1000
  | bin _time span=15m
  | stats avg(response_time) as "response avg"
                      , median(response_time) as "response median"
                      , perc95(response_time) as "response 95%"
                      , avg(connect_time) as "connect avg"
                      , count(eval(match(status, "503"))) as "# timeouts"
                      , count as "# requests"
                      by _time</searchString>
        <earliestTime/>
        <latestTime/>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>requests &gt; 10s</title>
        <searchString>index=heroku 
  | regex method="GET|POST" 
  | eval response_time=tonumber(replace(service, "[ms]", "")) 
  | where response_time &gt; 10000 
  | stats count, avg(response_time), max(response_time) by path</searchString>
        <earliestTime/>
        <latestTime/>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>response times grouped as ranges</title>
        <searchString>index=heroku 
  | regex method="GET|POST" 
  | eval response_time=tonumber(replace(service, "[ms]", "")) 
  | rex field=path "(?&lt;location&gt;[^?]+)"
  | eval range=response_time/1000
  | rangemap field=range lightgreen=2-3 darkgreen=3-5 yellow=5-10 brown=10-15 orange=15-20 pink=20-25 red=25-100 default=green
  | stats count(eval(match(range, "green"))) as "&lt;1s"
        , count(eval(match(range, "lightgreen"))) as "2..3s"
        , count(eval(match(range, "darkgreen"))) as "3..5s"
        , count(eval(match(range, "yellow"))) as "5..10s"
        , count(eval(match(range, "brown"))) as "10..15s"
        , count(eval(match(range, "orange"))) as "15..20s"
        , count(eval(match(range, "pink"))) as "20..25s"
        , count(eval(match(range, "red"))) as "&gt;25s"
        , count as "Total"
        , values(status) as "Status Codes"
        , avg(response_time)
        , max(response_time) 
    by location</searchString>
        <earliestTime/>
        <latestTime/>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>average memory by worker dyno (web/workers)</title>
        <searchString>index=heroku 
  | rex "(heroku|app) (?&lt;dyno&gt;\w+\.\d+) -" 
  | regex dyno="worker"
  | timechart span="15m" avg(memory_total) as avg by dyno</searchString>
        <earliestTime/>
        <latestTime/>
      </table>
    </panel>
  </row>
</form>